--Question 1
--Anlayse the data provided by BCM Supplier address was corrected as for same supplier name, the address was wrongly written.

-- Question 2

CREATE TABLE BCM_SUPPLIER (
    SUPPLIER_REF int NOT NULL AUTO_INCREMENT,
    SUPPLIER_NAME varchar(255) NOT NULL,
	SUPP_CONTACT_NAME varchar(255),
    SUPP_ADDRESS varchar(255),
    SUPP_CONTACT_NUMBER varchar(25),
	SUPP_EMAIL varchar(255),
    CONSTRAINT BCM_SUPPLIER_PK PRIMARY KEY (SUPPLIER_REF)
);

CREATE TABLE BCM_ORDER (
    ORDER_ID int NOT NULL AUTO_INCREMENT,
    ORDER_REF varchar(25) NOT NULL,
	SUPPLIER_REF int NOT NULL,
    ORDER_DATE varchar(255) NOT NULL,
    ORDER_DESCRIPTION varchar(255),
	ORDER_STATUS varchar(25),
    CONSTRAINT BCM_ORDER_PK PRIMARY KEY (ORDER_ID)
);

CREATE TABLE BCM_INVOICE (
	INVOICE_ID int NOT NULL AUTO_INCREMENT,
    INVOICE_REFERENCE varchar(25) NOT NULL,
	SUPPLIER_REF int NOT NULL,
    INVOICE_DATE varchar(255) NOT NULL,
	INVOICE_STATUS varchar(25),
    INVOICE_HOLD_REASON varchar(255),
    INVOICE_DESCRIPTION varchar(255),
    INVOICE_AMOUNT double,
    CONSTRAINT BCM_INVOICE_PK PRIMARY KEY (INVOICE_ID),
	CONSTRAINT FK_BCM_INVOICE
		FOREIGN KEY (SUPPLIER_REF)
		REFERENCES BCM_SUPPLIER(SUPPLIER_REF)
);

CREATE TABLE BCM_ORDER_LINE (
    ORDER_LINE_ID int NOT NULL AUTO_INCREMENT,
    ORDER_LINE_REF Varchar(25) NOT NULL,
    ORDER_ID int NOT NULL,
	INVOICE_REFERENCE varchar(25) NOT NULL,
    ORDER_STATUS varchar(25),
    ORDER_LINE_DESCRIPTION varchar(255),
    ORDER_LINE_AMOUNT double,
    PRIMARY KEY (ORDER_LINE_ID),
	CONSTRAINT FK_BCM_ORDER_LINE
		FOREIGN KEY (ORDER_ID)
		REFERENCES BCM_ORDER(ORDER_ID)
);


-- Question 3
-- Extract Supplier Information
CREATE PROCEDURE POPULATE_BCM_SUPPLIER()
INSERT INTO BCM_SUPPLIER (SUPPLIER_NAME, SUPP_CONTACT_NAME, SUPP_ADDRESS, SUPP_CONTACT_NUMBER, SUPP_EMAIL)
SELECT SUPPLIER_NAME, SUPP_CONTACT_NAME, SUPP_ADDRESS, REPLACE(REPLACE(SUPP_CONTACT_NUMBER,'.',''),' ',''), SUPP_EMAIL FROM XXBCM_ORDER_MGT GROUP BY SUPPLIER_NAME, SUPP_CONTACT_NAME, SUPP_ADDRESS, SUPP_CONTACT_NUMBER, SUPP_EMAIL
CREATE PROCEDURE POPULATE_BCM_ORDER()
INSERT INTO BCM_ORDER (ORDER_REF,SUPPLIER_REF, ORDER_DESCRIPTION, ORDER_STATUS,ORDER_DATE)
SELECT mgt.ORDER_REF, sup.SUPPLIER_REF, mgt.ORDER_DESCRIPTION, mgt.ORDER_STATUS , STR_TO_DATE(
(CASE 
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='01' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'JAN',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='02' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'FEB',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='03' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'MAR',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='04' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'APR',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='05' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'MAY',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='06' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'JUN',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='07' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'JUL',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='08' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'AUG',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='09' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'SEP',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='10' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'OCT',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='11' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'NOV',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='12' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'DEC',SUBSTRING(mgt.ORDER_DATE, 6,5))
ELSE mgt.ORDER_DATE END),'%d-%b-%Y')
FROM `XXBCM_ORDER_MGT` as mgt INNER JOIN BCM_SUPPLIER as sup ON sup.SUPPLIER_NAME = mgt.SUPPLIER_NAME 
WHERE  mgt.`ORDER_LINE_AMOUNT` IS NULL GROUP BY mgt.ORDER_REF, sup.SUPPLIER_REF, mgt.ORDER_DATE, mgt.ORDER_DESCRIPTION, mgt.ORDER_STATUS

--Extract Invoice Information		
	
CREATE PROCEDURE POPULATE_BCM_INVOICE ()
INSERT INTO BCM_INVOICE (INVOICE_REFERENCE, SUPPLIER_REF, INVOICE_DATE, INVOICE_STATUS, INVOICE_HOLD_REASON, INVOICE_DESCRIPTION)
SELECT mgt.`INVOICE_REFERENCE`, sup.SUPPLIER_REF, REPLACE(mgt.INVOICE_DATE, '-',' '), mgt.`INVOICE_STATUS`, mgt.`INVOICE_HOLD_REASON`, mgt.`INVOICE_DESCRIPTION` 
FROM `XXBCM_ORDER_MGT` mgt INNER JOIN BCM_SUPPLIER as sup ON mgt.SUPPLIER_NAME = sup.SUPPLIER_NAME 
WHERE `INVOICE_REFERENCE` IS NOT NULL GROUP BY mgt.`INVOICE_REFERENCE`, sup.SUPPLIER_REF, REPLACE(mgt.INVOICE_DATE, '-',' '), mgt.`INVOICE_STATUS`, mgt.`INVOICE_HOLD_REASON`, mgt.`INVOICE_DESCRIPTION`

--Extract Order Information
		
INSERT INTO BCM_ORDER (ORDER_REF,SUPPLIER_REF, ORDER_DESCRIPTION, ORDER_STATUS,ORDER_DATE)
SELECT mgt.ORDER_REF, sup.SUPPLIER_REF, mgt.ORDER_DESCRIPTION, mgt.ORDER_STATUS , STR_TO_DATE(
(CASE 
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='01' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'JAN',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='02' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'FEB',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='03' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'MAR',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='04' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'APR',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='05' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'MAY',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='06' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'JUN',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='07' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'JUL',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='08' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'AUG',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='09' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'SEP',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='10' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'OCT',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='11' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'NOV',SUBSTRING(mgt.ORDER_DATE, 6,5))
WHEN (SUBSTRING(mgt.ORDER_DATE,4,2))='12' THEN CONCAT(SUBSTRING(mgt.ORDER_DATE, 1,3),'DEC',SUBSTRING(mgt.ORDER_DATE, 6,5))
ELSE mgt.ORDER_DATE END),'%d-%b-%Y')
FROM `XXBCM_ORDER_MGT` as mgt INNER JOIN BCM_SUPPLIER as sup ON sup.SUPPLIER_NAME = mgt.SUPPLIER_NAME 
WHERE  mgt.`ORDER_LINE_AMOUNT` IS NULL GROUP BY mgt.ORDER_REF, sup.SUPPLIER_REF, mgt.ORDER_DATE, mgt.ORDER_DESCRIPTION, mgt.ORDER_STATUS
		
--Extract Order Line Innformation		
CREATE PROCEDURE POPULATE_BCM_ORDER_LINE ()
INSERT INTO BCM_ORDER_LINE (ORDER_LINE_REF, ORDER_ID, INVOICE_REFERENCE,ORDER_STATUS, ORDER_LINE_DESCRIPTION, ORDER_LINE_AMOUNT)
SELECT mgt.`ORDER_REF` AS ORDER_LINE_REF, bcmOrder.Order_ID,mgt.`INVOICE_REFERENCE`,mgt.`ORDER_STATUS`,mgt.`ORDER_DESCRIPTION`, REPLACE(REPLACE(REPLACE(REPLACE(ORDER_LINE_AMOUNT, ',', ''), 'o', 0), 'I', 1),'S',5)  as Total_Amount
FROM `XXBCM_ORDER_MGT` as mgt INNER JOIN BCM_ORDER as bcmOrder ON bcmOrder.ORDER_REF=SUBSTRING(mgt.`ORDER_REF`, 1, 5) WHERE `ORDER_LINE_AMOUNT`  IS NOT NULL AND mgt.INVOICE_REFERENCE IS NOT NULL



-- Question 4

CREATE PROCEDURE POPULATE_BCM_SUMMARY_ORDERS()

SELECT  REPLACE(LTRIM(REPLACE( SUBSTRING(O.ORDER_REF,3),'0',' ')),' ','0') AS "Order Reference", 
    DATE_FORMAT(O.ORDER_DATE,'%b-%y') AS 'Order Period', 
    CONCAT(SUBSTRING(S.SUPPLIER_NAME, 1, 1),LOWER(RIGHT(S.SUPPLIER_NAME, 
    LENGTH(S.SUPPLIER_NAME) - 1)))  AS "Supplier Name", 
    FORMAT(SUM(OL.ORDER_LINE_AMOUNT),'N') AS 'Order Total Amount' , 
    OL.ORDER_STATUS as 'Order Status', 
    OL.INVOICE_REFERENCE AS 'Invoice Reference', 
   
    FORMAT(SUM(INV.INVOICE_AMOUNT),'N') as 'Invoice Total Amount',
     (
    CASE 
       WHEN (INV.INVOICE_STATUS = 'paid') THEN 'OK'
       WHEN(INV.INVOICE_STATUS = 'Pending') THEN 'To follow up'
        ELSE 'To verify'
    END) AS Action
   
FROM BCM_ORDER O INNER JOIN BCM_SUPPLIER S ON S.SUPPLIER_REF = O.SUPPLIER_REF 
INNER JOIN BCM_ORDER_LINE OL ON OL.ORDER_ID = O.ORDER_ID INNER JOIN BCM_INVOICE INV ON INV.INVOICE_REFERENCE=OL.INVOICE_REFERENCE GROUP BY OL.INVOICE_REFERENCE,O.Order_REF,O.ORDER_DATE,S.SUPPLIER_NAME,OL.ORDER_STATUS,INV.INVOICE_STATUS


-- Question 5

CREATE PROCEDURE POPULATE_BCM_THIRD_HIGHEST_AMOUNT()


SELECT Reference AS 'Order Reference', Period AS 'Order Period', UPPER(Supp_Name) AS 'Supplier Name', FORMAT(Total_Amount,'N1') AS 'Order Total Amount', O_Status AS 'Order Status',Invoice_Reference AS 'Invoice References'
FROM (
SELECT  REPLACE(LTRIM(REPLACE( SUBSTRING(O.ORDER_REF,3),'0',' ')),' ','0') AS 'Reference',  
DATE_FORMAT(O.ORDER_DATE,'%M %d,%Y') AS 'Period', 
CONCAT(SUBSTRING(S.SUPPLIER_NAME, 1, 1),LOWER(RIGHT(S.SUPPLIER_NAME, LENGTH(S.SUPPLIER_NAME) - 1)))  AS "Supp_Name", 
SUM(OL.ORDER_LINE_AMOUNT) AS 'Total_Amount' , OL.ORDER_STATUS as 'O_Status',GROUP_CONCAT(DISTINCT OL.INVOICE_REFERENCE ORDER BY OL.INVOICE_REFERENCE) AS 'Invoice_Reference'
FROM BCM_ORDER O INNER JOIN BCM_SUPPLIER S ON S.SUPPLIER_REF = O.SUPPLIER_REF
INNER JOIN BCM_ORDER_LINE OL ON OL.ORDER_ID = O.ORDER_ID
GROUP BY O.ORDER_REF,O.ORDER_DATE,S.SUPPLIER_NAME,OL.ORDER_STATUS ORDER BY Total_Amount DESC LIMIT 3
)AS A ORDER BY A.Total_Amount ASC LIMIT 1




-- Question 6

CREATE PROCEDURE POPULATE_BCM_ORDERS_AMOUNT()
SELECT SUP.SUPPLIER_NAME AS 'Supplier Name',SUP.SUPP_CONTACT_NAME AS ' Supplier Contact Name',
(CASE 
WHEN (SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',1)) LIKE '5%' THEN CONCAT(LEFT(SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',1),4),'-',RIGHT(SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',1),4)) ELSE CONCAT(LEFT(SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',1),3),'-',RIGHT(SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',1),4)) end) AS 'Supplier Contact No. 1',

(CASE 
 WHEN LOCATE(',',SUP.SUPP_CONTACT_Number)=0 THEN ''
 ELSE (CASE 
WHEN (SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',-1)) LIKE '5%' THEN CONCAT(LEFT(SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',-1),4),'-',RIGHT(SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',-1),4)) ELSE CONCAT(LEFT(SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',-1),3),'-',RIGHT(SUBSTRING_INDEX(SUP.SUPP_CONTACT_NUMBER,',',-1),4)) end)
 
 END) AS 'Supplier Contact No. 2',

COUNT(O.ORDER_ID) AS 'Total Orders',FORMAT(SUM(OL.ORDER_LINE_AMOUNT),'N1') AS 'Order Total Amount' FROM BCM_ORDER O INNER JOIN BCM_SUPPLIER SUP ON SUP.SUPPLIER_REF=O.SUPPLIER_REF INNER JOIN BCM_ORDER_LINE OL ON O.ORDER_ID=OL.ORDER_ID WHERE (O.ORDER_DATE BETWEEN '2017-01-01' AND '2017-08-31') GROUP BY SUP.SUPPLIER_NAME,SUP.SUPP_CONTACT_NAME,SUP.SUPP_CONTACT_NUMBER

